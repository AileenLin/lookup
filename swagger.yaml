#Author: Kunal
swagger: '2.0'
info:
  title: DBpedia Lookup
  version: '2.0'

  description: DBpedia Lookup is a web service that can be used to look up DBpedia URIs by related keywords. Related means that either the label of a resource matches, or an anchor text that was frequently used in Wikipedia to refer to a specific resource matches (for example the resource http://dbpedia.org/resource/United_States can be looked up by the string "USA"). The results are ranked by the number of inlinks pointing from other Wikipedia pages at a result page.


    Two APIs are offered-Keyword Search and Prefix Search. A hosted version of the Lookup service is available on the DBpedia server infrastructure.


    The Dbpedia now also supports internationalization for the English, German and Spanish.


  contact:
    name: Dbpedia Developers
    url:  https://lists.sourceforge.net/lists/listinfo/dbpedia-developers

host: lookup.dbpedia.org
basePath: /api/search.asmx
schemes:
  - http
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xm
  - application/json+ld
paths:
  /KeywordSearch:
    get:
      description: The Keyword Search API can be used to find related DBpedia resources for a given string. The string may consist of a single or multiple words. Example, http://lookup.dbpedia.org/api/search/KeywordSearch?QueryClass=place&QueryString=berlin
      operationId: keySearch
      parameters:
        - name: QueryString
          in: query
          description: a string (list of word(s)) which acts as a label for the query to be found.
          required: true
          type: string
        - name: QueryClass
          in: query
          description:  a DBpedia class from the Ontology that the results should have.
          required: false
          type: string
        - name: MaxHits
          in: query
          description: Default is 5. The number of results returned of the query fired.
          default: 5
          required: false
          type: integer
        - name: Language
          in: query
          description: Default is 'en' for English. The language which the results should be displayed.
          default: en
          required: false
          type: string
      tags:
        - Keyword
      responses:
        '200':
          description: Result is returned in JSON-LD format.
          schema:
            $ref: '#/definitions/ResultJsonLDSerializer'
        '400':
          description: Result is returned in JSON format.
          schema:
            $ref: '#/definitions/ResultJsonSerializer'
        '300':
          description: Result is not Found in DBpedia
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Result is returned in XML format.
          schema:
            $ref: '#/definitions/ResultXmlSerializer'
  /PrefixSearch:
    get:
      description: The PrefixSearch API can be used to implement autocomplete input boxes. For a given partial keyword like berl the API returns URIs of related DBpedia resources like http://dbpedia.org/resource/Berlin.Example, http://lookup.dbpedia.org/api/search/PrefixSearch?QueryClass=&MaxHits=5&QueryString=berl
      operationId: autocompleteSearch
      parameters:
        - name: QueryString
          in: query
          description: a string (list of word(s)) which acts as a label for the query to be found.
          required: true
          type: string
        - name: QueryClass
          in: query
          description:  a DBpedia class from the Ontology that the results should have .
          required: false
          type: string
        - name: maxHits
          in: query
          description: Default is 5. The number of results returned of the query fired.
          default: 5
          required: false
          type: integer
        - name: Language
          in: query
          description: Default is 'en' for English. The language which the results should be displayed.
          default: en
          required: false
          type: string
      tags:
        - Autocomplete/Prefix
      responses:
        '200':
          description: Result is returned in JSON-LD format.
          schema:
            $ref: '#/definitions/ResultJsonLDSerializer'
        '400':
          description: Result is returned in JSON format.
          schema:
            $ref: '#/definitions/ResultJsonSerializer'
        '300':
          description: Result is not Found in DBpedia
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Result is returned in XML format.
          schema:
            $ref: '#/definitions/ResultXmlSerializer'

definitions:
  Uri:
    type: object
    description: Class for URI. Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      uri:
        type: string
  Label:
    type: object
    description: Class for Label. Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      label:
        type: string

  OntologyClass:
    type: object
    description: Ontology Class Definition.Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      uri:
        $ref: '#/definitions/Uri'
      label:
        $ref: '#/definitions/Label'
  Category:
    type: object
    description: <TODO>. Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      uri:
        $ref: '#/definitions/Uri'
      label:
        $ref: '#/definitions/Label'
  Template:
    type: object
    description: <TODO>. Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      uri:
        $ref: '#/definitions/Uri'
  Redirect:
    type: object
    description: Handles the redirection of the resource's URI. Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      uri:
        $ref: '#/definitions/Uri'
  Result:
    type: object
    description: The result of the query has the following properties. These properties are serialised to display in various formats. Package- (org.dbpedia.lookup.entities.Entities.scala)
    properties:
      uri:
        $ref: '#/definitions/Uri'
      description:
        type: string
      classes:
       type: array
       items:
        $ref: '#/definitions/OntologyClass'
      categories:
       type: array
       items:
        $ref: '#/definitions/Category'
      templates:
       type: array
       items:
        $ref: '#/definitions/Template'
      redirects:
        type: array
        items:
          $ref: '#/definitions/Redirect'
      refCount:
        type: integer

  ResultJsonLDSerializer:
    type: object
    description: The serializer will parse the Result to Json+LD format when the document accepts the Header "Application/json+ld". Package- (org.dbpedia.lookup.entities.EntitiesSerialization.scala)
    properties:
      Result:
        $ref: '#/definitions/Result'

  ResultJsonSerializer:
    type: object
    description: The serializer will parse the Result to Json format when the document accepts the Header "Application/json". Package- (org.dbpedia.lookup.entities.EntitiesSerialization.scala)
    properties:
      Result:
        $ref: '#/definitions/Result'

  ResultXmlSerializer:
    type: object
    description: The serializer will parse the Result to XML format. DEFAULT. Package- (org.dbpedia.lookup.entities.EntitiesSerialization.scala)
    properties:
      Result:
        $ref: '#/definitions/Result'


  Server:
    type: object
    description: Configures and starts the server. Default port is 1111. Package- (org.dbpedia.lookup.server.Server.scala).
    properties:
      serverUri:
        type: string
      port:
        type: integer
      baseuri:
        type: string


  LookupResource:
    type: object
    description: The class that takes care of the search parmateres and query. It parses the input query and calls the service accordingly.
    properties:
      accept:
        type: string
      lang:
        type: string
        default: en
      maxHits:
        type: integer
        default: 5
      query:
        type: string
      searcher:
        $ref: '#/definitions/Searcher'

  Searcher:
   type: object
   description: The Searcher class is responsible for performing the searches. It matches the language of the query (DEFAULT- English) and searches the corresponding index for the query and returns result.

  Indexer:
    type: object
    description: The indexer class is completely independent module which allows users to generate new indexes.

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
